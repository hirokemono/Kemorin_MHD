***********************************************************************
*     サンプル sjpack-test について              By 石岡圭一 2009/08/21
***********************************************************************
-----------------------------------------------------------------------
・概要
-----------------------------------------------------------------------

  このサンプルプログラムは, sjpack 中の変換ルーチンのテストをするための
プログラムである. 各処理系においてインストールがうまくいっているかどうか
や, 並列化効率のチェックなどに利用されたい.

-----------------------------------------------------------------------
・構成
-----------------------------------------------------------------------

  - Makefile: メークファイル
  - test1.f: SJPACK と SNPACK の比較. 逆変換と正変換
  - test2.f: SJPACK 内での 逆変換と正変換のテスト
  - testomp.f: SJPACK で OpenMP で並列化されたものと, 
               シリアルなものとの結果の比較チェック
  - bench.f: SJPACK と SNPACK のスピード比較のベンチマーク
  - benchomp.f: SJPACK(OpenMP 版) と SNPACK のスピード比較のベンチマーク
  
なお, SSE2 を有効にして ISPACK をインストールした場合, いくつかの配列を
16バイトアライメントしなければならないが, それをコンパイラが自動的に
やってくれない場合に対応して, 上の 5つの Fortran77プログラムそれぞれ
において16バイトアライメントが必要な配列のアライメントを強制するプログ
ラムを *-align.f (* の部分は上のプログラムのベースネームの部分) として
用意しておいたので, 上記のプログラムを実行しようとして Segmentation Fault
を食らうような場合は, そちらの方を試されたい.

-----------------------------------------------------------------------
・使用方法
-----------------------------------------------------------------------

 Makefile中のマクロ定義を自分の環境に合せて適当に修正し, 

  % make (プログラム名).out

によって実行型ファイルができるので, それを実行すること. 
test1.f を実行したい場合には,

 % make test1.out
 % ./test1.out

とすること. また, OpenMP で並列実行するためには, 事前に

 % export OMP_NUM_THREADS=4
 
などとして, スレッド数を指定しておく必要がある(さらに, ifort を使って
いる場合には ulimit -s 1000000000 などとしてスタックサイズの上限を
広げておく必要もある).

