***********************************************************************
*     サンプル IO について                       By 石岡圭一 1997/04/26
***********************************************************************
-----------------------------------------------------------------------
・概要
-----------------------------------------------------------------------

  このサンプルプログラムは, f[ehl]packを用いてデータの読み書きを行うサ
ンプルである.

-----------------------------------------------------------------------
・構成
-----------------------------------------------------------------------

  - Makefile: メークファイル
  - put.f: データをファイルに書き込むサンプルプログラム
  - get.f: データをファイルから読み込むサンプルプログラム

-----------------------------------------------------------------------
・使用方法
-----------------------------------------------------------------------

 Makefile中のマクロ定義を自分の環境に合せて適当に修正し, 

  % make (プログラム名).out

によって実行型ファイルができるので, それを実行すること. 例えば,
上記の put.f でを実行したい場合には,

 % make put.out
 % ./put.out

とすること.

-----------------------------------------------------------------------
・注意
-----------------------------------------------------------------------

  メインフレームなど, ライブラリのリンク等が行いにくい環境においては,
パックファイル(ispack.f)を適宜 put.f 等にインクルードするなりしてコン
パイルすること.

-----------------------------------------------------------------------
・MSPに対する特記事項
-----------------------------------------------------------------------

  MSPにおいてこのIOライブラリを用いる場合には以下のようにすること.

1) ファイルの確保:

  このIOライブラリを用いてMSP上でファイルにデータを書き出したり, また
はワークステーション等においてこのIOライブラリを用いて作成したデータを
転送したりする場合には, 前もって, PFDのユーティリティモード等で以下の
ようにファイル領域を確保しておく必要がある.

・ファイル形式 = FBまたはF

・レコード長 = 適当(23476 bytes が最も格納効率が良いので, この値をすす
  める)

・ブロック長 = レコード長と同一にすること

・ファイルサイズ = データを格納するのに必要な大きさを与えておくこと.
    レコード長およびブロック長を23476とした場合には, 1トラックに格納で
    きるデータ量は23476*2=46952バイトであるので, これで与えるべきトラッ
    ク数を見積ること.

※区分データセットにすると問題が生ずる場合があるので, できれば区分デー
  タセットは使わないこと.

2) MSP上でのファイルの書き込み

  1)のようにしてファイル領域を用意してあれば, サンプルプログラムput.f
の出力データセット名にそのファイル領域を指定して書き込めばよい.

3) MSP ⇔ WS 間のファイル転送

  バイナリモードの通常のftpをすればよい. ただし, WS → MSP の場合には,
1)のように前もって宛先の領域を確保しておくこと(そうしないと, データセッ
トの形式がFBまたはFにならず, VBSのようになってしまい, 本IOライブラリで
は扱えなくなってしまう).

※ 以上のような注意点に留意すれば, 本IOライブラリを用いることによって,
MSPとWSでファイルを全く同じように扱うことができる.
