#! /bin/csh
#
#

HOMEDIR= $(HOME)
SRCDIR = $(HOME)/src_kemo
MHDDIR = $(SRCDIR)/MHD
WORKDIR = $(SRCDIR)/work

LOCALDIR= $(HOMEDIR)/local

CC= gcc-13
OPTFLAGS = -fopenmp -O3 -Wall -g

#
#   Library settings
#
KEMO_INCLUDES = -I. -I$(MHDDIR)/C_src/CORE_C


LIB_KEMO_C = -L$(WORKDIR) -lkemo_c

#
COCOA_FLAG=
OPTFLAGS_GL =  $(OPTFLAGS) $(COCOA_FLAG) $(KEMO_INCLUDES) $(OPENGL_INC)

#
#  -------------------------------------------------------------------------
#
#
#
SORT_TEST_DIR = $$(TESTS_DIR)/Sorting_test

TARGET_SORT_TEST_OMP =  test_sortings_omp

MOD_SORT_TEST = \
array_for_sorting_test.o \
double_sorting_tests.o \
float_sorting_tests.o \
integer_sorting_tests.o \
\
bitonic_sort_omp.o

#
#  ------------------------------------------------------------------
#

.SUFFIXES: .o .c

all: $(TARGET_SORT_TEST_OMP)

clean:
	rm -f *.o *.mod *~ *.par *.diag *.a
	rm -fr test_sortings_*

$(TARGET_SORT_TEST_OMP): kemo_bitonic_sort.c $(MOD_SORT_TEST)
	$(CC) $(OPTFLAGS_GL) -o $(TARGET_SORT_TEST_OMP) \
	kemo_bitonic_sort.c $(MOD_SORT_TEST) $(LIB_KEMO_C)

array_for_sorting_test.o: \
 array_for_sorting_test.c \
 array_for_sorting_test.h
	$(CC) -c $(OPTFLAGS) $(KEMO_INCLUDES) $<
double_sorting_tests.o: \
 double_sorting_tests.c \
 double_sorting_tests.h \
 array_for_sorting_test.h
	$(CC) -c $(OPTFLAGS) $(KEMO_INCLUDES) $<
float_sorting_tests.o: \
 float_sorting_tests.c \
 float_sorting_tests.h \
 array_for_sorting_test.h
	$(CC) -c $(OPTFLAGS) $(KEMO_INCLUDES) $<
integer_sorting_tests.o: \
 integer_sorting_tests.c \
 integer_sorting_tests.h \
 array_for_sorting_test.h
	$(CC) -c $(OPTFLAGS) $(KEMO_INCLUDES) $<

bitonic_sort_omp.o: \
 bitonic_sort_omp.c \
 bitonic_sort_omp.h
	$(CC) -c $(OPTFLAGS) $(KEMO_INCLUDES) $<
