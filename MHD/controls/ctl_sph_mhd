begin fluid_control
!!!!! Define for files !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!  num_subdomain_ctl: number of subdomains (not used)
!  num_smp_ctl:       number of smp processes
!
!  mesh_file_head_ctl:  header of mesh file (Default: in.domain#)
!
!  rst_file_head_ctl:   header of restart file
!                            (Default: restart/rst.step#.domain#)
!
!  field_file_prefix: header for snapshot field data 
!                            (Default: out.step#.domain#.udt)
!
!    mesh_file_fmt_ctl:   data format for mesh file
!    rst_files_fmt_ctl:   data format for restart files
!    udt_files_fmt_ctl:   data format for udt files
!                            (ascii or binary, Dafault is 'ascii')
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
  begin data_files_def
    num_subdomain_ctl           2
    num_smp_ctl                 4
!
    mesh_file_head_ctl          'mesh/in'
!
    mesh_sph_grid_ctl           'mesh/in_rtp'
    mesh_sph_lag_ctl            'mesh/in_rtm'
    mesh_sph_lag_spec_ctl       'mesh/in_rlm'
    mesh_sph_mode_ctl           'mesh/in_rj'
!
    rst_file_head_ctl           'restart/rst'
!
    org_udt_file_head_ctl       'filed_org/out'
    field_file_prefix           'field/out'
!
    mesh_file_fmt_ctl           'ascii'
    rst_files_fmt_ctl           'ascii'
    udt_files_fmt_ctl           'ascii'
  end
!
  begin model
!!!!!  physical values!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! available valuables 
!   velocity, temperature, pressure, vorticity
!   vector_potential, magnetic_field, current_density, magnetic_potential
!   electric_field, poynting_flux
!   composition, perturbation_temp
!
!   filter_velocity, filter_temperature, filter_pert_temperature
!   filter_vector_potential, filter_magne
!
!   kinetic_helicity, magnetic_helicity
!   current_helicity, cross_helicity
!
!   buoyancy_work, Lorentz_work, mag_tension_work
!   magnetic_ene_generation, work_against_Lorentz
!   temp_generation, pert_temp_generation
!   viscous_ene_diffusion, magnetic_ene_diffusion
!
!   thermal_diffusion, viscous_diffusion
!   vector_potential_diffusion, magnetic_diffusion
!   magnetic_tension, Lorentz_force
!   Coriolis_force, buoyancy
!
!
!   heat_flux, pert_heat_flux
!   momentum_flux, maxwell_tensor
!   magnetic_induction, vecp_induction
!
!   heat_advect, pert_heat_advect
!   inertia,  
!   div_heat_flux, div_pert_heat_flux
!   div_momentum_flux, div_maxwell_tensor
!
!   induction_tensor, div_induction_tensor
!
!   SGS_heat_flux
!   SGS_momentum_flux, SGS_maxwell_tensor
!   SGS_induct_tensor, SGS_vecp_induction
!
!   div_SGS_h_flux, div_SGS_m_flux
!   SGS_Lorentz
!   SGS_induction, 
!
!   SGS_Lorentz_work Reynolds_work
!   SGS_temp_flux_gen     SGS_mag_induction_flux
!
! termes for direct estimation
!   SGS_div_h_flux_true
!   SGS_div_m_flux_true, SGS_Lorentz_true, SGS_mag_induction_true
!
!   SGS_Lorentz_work_true   Reynolds_work_true
!   SGS_temp_flux_gen_true  SGS_mag_induction_flux_true
!   
!
!
!   v_r, v_theta, v_phi, v_s, w_r, w_theta, w_phi, w_s, 
!   a_r, a_theta, a_phi, a_s, b_r, b_theta, b_phi, b_s, 
!   j_r, j_theta, j_phi, j_s
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    begin phys_values_ctl
      array nod_value_ctl   8
        nod_value_ctl  velocity            Viz_On   Monitor_On    end
        nod_value_ctl  temperature         Viz_On   Monitor_On    end
        nod_value_ctl  pressure            Viz_On   Monitor_Off   end
        nod_value_ctl  vorticity           Viz_On   Monitor_Off   end
        nod_value_ctl  vector_potential    Viz_Off  Monitor_Off   end
        nod_value_ctl  magnetic_field      Viz_On   Monitor_On    end
        nod_value_ctl  current_density     Viz_On   Monitor_Off   end
        nod_value_ctl  magnetic_potential  Viz_Off  Monitor_Off   end
      end array
    end
!
!!!!!  physical values for time evolution !!!!!!!!!!!!!!!!!!
! aviable valuables: velocity, temperature, magnetic_field
!                    vector_potential, composition
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    begin time_evolution_ctl
      array time_evo_ctl   3
        time_evo_ctl  temperature        end
        time_evo_ctl  velocity           end
        time_evo_ctl  vector_potential   end
      end array
    end
!
!!!!!  setting for layers 
!
    begin layers_ctl
      array fluid_ele_grp    1
        fluid_ele_grp    outer_core_ele   end
      end array
!
      array conduct_ele_grp    1
!         conduct_ele_grp    inner_core_ele   end
         conduct_ele_grp    outer_core_ele   end
      end array
	end  layers_ctl
!
!!!!!  setting for boundary condition
!
    begin bc_4_node
!!!!!  boundary condition for temperature  !!!!!!!!!!!!!!!!!!!!!!!!
!  available type:  fixed, file
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array bc_temperature   2
        bc_temperature  fixed ICB  1.000  end
        bc_temperature  fixed CMB  0.000  end
      end array
!!!!!  boundary condition for velocity  !!!!!!!!!!!!!!!!!!!!!!!!
!  available type
!     fix_x,  fix_y,  fix_z
!     file_x, file_y, file_z
!     rot_x,  rot_y,  rot_z
!       (Note: set all compornents of the rotation vector!!)
!     free_sph
!     specitial (you have to define the B.C. in source file)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array bc_velocity    7
        bc_velocity  fix_x  ICB   0.000  end
        bc_velocity  fix_y  ICB   0.000  end
        bc_velocity  fix_z  ICB   0.000  end
        bc_velocity  fix_x  CMB   0.000  end
        bc_velocity  fix_y  CMB   0.000  end
        bc_velocity  fix_z  CMB   0.000  end
        bc_velocity  fix_z  equator 0.000  end
      end array
!!!!!  boundary condition for pressure  !!!!!!!!!!!!!!!!!!!!!!!!!!!
!  available type:  fixed, file
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array bc_pressure  1
        bc_pressure  fixed Press  0.000  end
      end array
!!!!!  boundary condition for dummy scalar  !!!!!!!!!!!!!!!!!!!!!!!
!  available type:  fixed, file
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array bc_composition  1
        bc_composition fixed  Press  0.000  end
      end array bc_composition
!!!!!  boundary condition for magnetic field  !!!!!!!!!!!!!!!!!!!!!
!  available type
!     fix_x,  fix_y,  fix_z
!     file_x, file_y, file_z
!     insulator (not recommend)
!     sph
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array bc_magnetic_field   2
        bc_magnetic_field  fix_x  equator     0.000  end
        bc_magnetic_field  fix_y  equator     0.000  end
!        bc_magnetic_field  fix_x  infinity     0.000  end
!        bc_magnetic_field  fix_y  infinity     0.000  end
!        bc_magnetic_field  fix_z  infinity     0.000  end
      end array
!!!!!  boundary condition for magnetic potential  !!!!!!!!!!!!!!!!!
!  available type:  fixed, file, sph
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      Magnetic_potential   3
        bc_mag_potential fixed   Centre  0.000  end
        bc_mag_potential fixed  infinity  0.000  end
        bc_mag_potential fixed  equator   0.000  end
      end array
!!!!!  boundary condition for vector potential  !!!!!!!!!!!!!!!!!!!
!  available type
!     fix_x,  fix_y,  fix_z
!     file_x, file_y, file_z
!     sph
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array bc_vector_potential    6
        bc_vector_potential fix_x   infinity  0.000  end
        bc_vector_potential fix_y   infinity  0.000  end
        bc_vector_potential fix_z   infinity  0.000  end
        bc_vector_potential insulate_shell   ICB  0.000  end
        bc_vector_potential insulate_shell   CMB 0.000  end
        bc_vector_potential fix_z   equator   0.000  end
      end array
!!!!!  boundary condition for current density !!!!!!!!!!!!!!!!!!!!!
!  available type
!     fix_x,  fix_y,  fix_z
!     file_x, file_y, file_z
!     insulator (not recommend)
!     sph
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array bc_current   0
!        bc_current  fix_x  infinity     0.000  end
!        bc_current  fix_y  infinity     0.000  end
!        bc_current  fix_z  infinity     0.000  end
      end array
    end
!
    begin bc_4_surface
!!!!!  boundary condition for heat flux  !!!!!!!!!!!!!!!!!!!!!!!!!!
!  available type:  fixed, file, SGS_commute
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
       array heat_flux_surf  0
!        heat_flux_surf  fixed       outer  0.000  end
!        heat_flux_surf  SGS_commute inner  0.000  end
!      end array
!!!!!  boundary condition for torque  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  available type
!     fix_x,  fix_y,  fix_z
!     file_x, file_y, file_z
!     normal_velocity
!     free_shell_in, free_shell_out
!     free_4_plane
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
       array velocity_surf     0 
!        velocity_surf  free_shell_in inner_surf   0.000  end
!        velocity_surf  free_shell_out  outer_surf   0.000  end
!      end array velocity_surf
!!!!!  boundary condition for pressure gradiend !!!!!!!!!!!!!!!!!!!
!  available type:  inner_shell, outer_shell
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        array pressure_surf  0 
!         pressure_surf   inner_shell inner_surf 0.000  end
!         pressure_surf   outer_shell outer_surf 0.000  end
!      end array pressure_surf
!!!!!  boundary condition for gradientof magnetic field  !!!!!!!!!!
!     fix_x,  fix_y,  fix_z
!     insulate_in, insulate_out (not recommended)
!     far_away                  (not used)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        array magnetic_field_surf  0
!          magnetic_field_surf  insulate_in  ICB_surf  0.000 end
!          magnetic_field_surf  insulate_out CMB_surf  0.000 end
!          magnetic_field_surf  far_away infinity_surf  0.000 end
!      end array magnetic_field_surf
!!!!!  boundary condition for gradientof magnetic field  !!!!!!!!!!
!     fix_x,  fix_y,  fix_z
!     insulate_in, insulate_out (not recommended)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!      array vector_potential_surf  0
!          vector_potential_surf  insulate_out CMB_surf  0.000 end
!      end array vector_potential_surf
!!!!!  boundary condition for current density on surface  !!!!!!!!!!
!     fix_x,  fix_y,  fix_z
!     insulate_in,insulate_out (not recommended)
!     far_away                  (not used)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        array current_surf  0
!          current_surf  insulate_in  ICB_surf  0.000 end
!          current_surf  insulate_out CMB_surf  0.000 end
!          current_surf  far_away infinity_surf  0.000 end
!      end array current_surf
!!!!!  boundary condition for magnetic potential !!!!!!!!!!!!!!!!!
!  available type:  fixed (not used), file (not used)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        array electric_potential_surf  0
!          electric_potential_surf  insulate_in  ICB_surf  0.000 end
!          electric_potential_surf  insulate_out CMB_surf  0.000 end
!          electric_potential_surf  far_away infinity_surf  0.000 end
!      end array electric_potential_surf
!!!!!  boundary condition for dummy scalar !!!!!!!!!!!!!!!!!
!  available type:  fixed_grad (not used), file_grad (not used)
!                   fixed_field
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        array composition_flux_surf  0
!          composition_flux_surf  insulate_in  ICB_surf  0.000 end
!          composition_flux_surf  insulate_out CMB_surf  0.000 end
!          composition_flux_surf  far_away infinity_surf  0.000 end
!      end array composition_flux_surf
!!!!!  boundary condition for infinity (obsolute) !!!!!!!!!!!!!!!!!
!  available type:  fixed (not used), file (not used)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array infinity_surf 0
!        infinity_surf  fixed infinity_surf  0.000  end
!      end array infinity_surf
    end
!
!!!!!  define of forces !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  available forces
!     gravity, Coriolis, Lorentz
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    begin forces_define
      array force_ctl      4
        force_ctl   gravity              end
        force_ctl   Coriolis             end
        force_ctl   Lorentz              end
        force_ctl   Composite_gravity    end
      end array
    end
!
!!!!!  dimensionless numbers !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  available numbers
!     Prandtl_number, magnetic_Prandtl_number
!     Rayleigh_number, modified_Rayleigh_number
!     Reynords_number
!     Taylor_number, Ekman_number
!     Elsasser_number
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    begin dimensionless_ctl
      array dimless_ctl 6
        dimless_ctl  Prandtl_number                   1.0e-0  end
        dimless_ctl  modified_Rayleigh_number         1.0E+2  end
        dimless_ctl  Ekman_number                     1.0e-3  end
        dimless_ctl  magnetic_Prandtl_number          5.0e+0  end
        dimless_ctl  Composite_Rayleigh_number        1.0E+2  end
        dimless_ctl  Composite_Prandtl_number         1.0E+2  end
      end array
    end
!
!!!!! Normalization settings  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!    define
!     num_coef_4_termal_evo:      time integration and advection of temp
!     num_coef_4_velocity_evo:    time integration and advection of temperature
!     num_coef_4_magnetic_evo:    time integration and advection of magnetic f.
!     num_coef_4_termal_diffusion:   coefficients for thermal diffusion
!     num_coef_4_viscous_diffusion:  coefficients for viscous diffusion
!     num_coef_4_magnetic_diffusion: coefficients for magnetic diffusion
!     num_coef_4_buoyancy:   coefficients for buoyancy
!     num_coef_4_Coriolis:   coefficients for Coriolis force
!     num_coef_4_Lorentz:    coefficients for Lorantz force
!
!     One:  1, Zero (Ignore), Two:  2,   Radial_parameter: (1-ri/ro)
!     Radial_35: (1-0.35)
!
!     Real number.... Power of each numbers
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
    begin coefficients_ctl
      begin thermal
        array coef_4_termal_ctl     1
          coef_4_termal_ctl            One                        1.0  end
        end array
        array coef_4_t_diffuse_ctl  1
          coef_4_t_diffuse_ctl         Prandtl_number            -1.0  end
        end array
      end  thermal
!
      begin momentum
        array coef_4_velocity_ctl            1
          coef_4_velocity_ctl          One                        1.0  end
        end array
        array coef_4_press_ctl               1
          coef_4_press_ctl             Ekman_number              -1.0  end
        end array
        array coef_4_v_diffuse_ctl           1
          coef_4_v_diffuse_ctl         One                        1.0  end
        end array
        array coef_4_buoyancy_ctl            3
          coef_4_buoyancy_ctl          Radial_parameter           1.0  end
          coef_4_buoyancy_ctl          modified_Rayleigh_number   1.0  end
          coef_4_buoyancy_ctl          Ekman_number              -1.0  end
        end array
        array coef_4_Coriolis_ctl            2
          coef_4_Coriolis_ctl          Two                        1.0  end
          coef_4_Coriolis_ctl          Ekman_number              -1.0  end
        end array
        array coef_4_Lorentz_ctl             2
          coef_4_Lorentz_ctl           magnetic_Prandtl_number   -1.0  end
          coef_4_Lorentz_ctl           Ekman_number              -1.0  end
        end array
        array coef_4_composit_buoyancy_ctl   3
          coef_4_composit_buoyancy_ctl  Radial_parameter           1.0  end
          coef_4_composit_buoyancy_ctl  Composite_Rayleigh_number  1.0  end
          coef_4_composit_buoyancy_ctl  Ekman_number              -1.0  end
        end array
      end  momentum
!
      begin induction
        array coef_4_magnetic_ctl   1
          coef_4_magnetic_ctl          One                        1.0  end
        end array
        array coef_4_mag_p_ctl      1
          coef_4_mag_p_ctl             One                        1.0  end
        end array
        array coef_4_m_diffuse_ctl  1
          coef_4_m_diffuse_ctl         magnetic_Prandtl_number   -1.0  end
        end array
        array coef_4_induction_ctl  1
          coef_4_induction_ctl         One                       -1.0  end
        end array
      end  induction
!
	  begin composition
        array coef_4_dscalar_ctl     1
          coef_4_dscalar_ctl            One                        1.0  end
        end array
        array coef_4_dsc_diffuse_ctl  1
          coef_4_dsc_diffuse_ctl        Composite_Prandtl_number  -1.0  end
        end array
      end  composition
!
    end  coefficients_ctl
!
    begin gravity_define
!!!!! gravity_type !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!      0: constant
!      1: constant_radial (constant intensity)
!      2: radial (propotional to radius)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      gravity_type_ctl     radial
!
!!!!! direction of gravity (opposite direction to that of buoyancy)
      array gravity_vec  3
        gravity_vec  x     0.000   end
        gravity_vec  y     0.000   end
        gravity_vec  z     -1.000   end
      end array
    end  gravity_define
!
    begin Coriolis_define
!!!!! direction of rotation vector for Coriolis force !!!!!!!!!!!!!
      array rotation_vec   3
        rotation_vec  x   0.000    end
        rotation_vec  y   0.000    end
        rotation_vec  z   1.000    end
      end array
    end  Coriolis_define
!
    begin Magneto_convection_def
      magneto_cv_ctl    On
!!!!!!!!!  magnetoconvection model!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!    array ext_magne_vec:   0...off  more than 1...On
!     ext_magne_vec: external field (constant)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      array ext_magne_vec   3
        ext_magne_vec  x     0.000   end
        ext_magne_vec  y     1.000   end
        ext_magne_vec  z     0.000   end
      end array
    end
!!!!!!!!! model for stratification !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!    ref_temperature_ctl: none           (No reference of temperature)
!                         spherical_shell ( for spherical shell model)
!                         sph_constant_heat (for spherical shell model)
!                         numrical_solution ( Get numerical solution)
!                         linear_x        ( propotional to x-direction )
!                         linear_y        ( propotional to x-direction )
!                         linear_z        ( propotional to x-direction )
!
!
!    stratified_ctl:   0...off  1...on
!     stratified_sigma_ctl: intense ofstratification
!     stratified_width_ctl: width of stratification
!     stratified_outer_r_ctl: outer boundary of stratification
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    begin temperature_define
      ref_temp_ctl              spherical_shell
      begin low_temp_ctl
        depth         1.5384615384615384
        temperature   0.0d0
      end
      begin high_temp_ctl
        depth         0.5384615384615384
        temperature   1.0d0
      end
!
      stratified_ctl            0
!      begin takepiro_model_ctl
!        stratified_sigma_ctl         0.000   end
!        stratified_width_ctl         0.000   end
!        stratified_outer_r_ctl       0.000   end
!      end takepiro_model_ctl
    end
!!!!!!!!!  SGS Model !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!     SGS_model_ctl: gradient.........nonlinear gradient model
!                    similarity.......Similarity model
!                    dynamic..........Dynamic model
!                    dynamic_similarity..Dynamic similarity model
!     filtering_scheme_ctl:   line....filtering along each directrion
!                             3d......filtering using 3-dimensional table
!                             3d-smp..filtering using 3-dimensional on SMP model
!     difference_scheme_ctl:  original.....original spaatial difference
!                             modified_sgs.....modified differential for SGS terms
!                             modified_all.....modified differential for all differeciation
!     diff_coef_mode_ctl:     whole_domain.....lead one constant for whole domain
!                             layerd...........lead one constant for each layer
!     negative_clip_ctl:      none.............use negative model coefficient
!                             zero.............set model coefs to 0 if it is neagative
!                             keep.............keep previous coefs if it is neagative
!     direction_marging_ctl:  lsq........... ..taking LSQ over directions
!                             average..........average over directions
!                             weighting........weighting average by correlation
!
!    filter_file_prefix:  header name for filter data
!
!    3d_filtering_ctl
!      whole_area:   filtering groups for whole domain
!      fluid_area:   filtering groups for fluid region
!
!    filter_4_eqs_ctl:   filtering area for each equation
!                      (whole_filtering of fluid filtering)
!          momentum_filter_ctl:     momentum equation
!          heat_filter_ctl:         heat equation
!          induction_filter_ctl:    inducition equation
!
!    layering_data_ctl:  layering type for dynamic model
!                      start_end... indicate start and end element ID by group
!                      explicit...  set elements by element groups explicitly
!                      ele_group_list...  set elements by element group list
!    num_layer_grp_ctl:    num. of group for layering
!        grp_stack_each_layer_ctl:  end layer group for each coefs
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    begin SGS_control
      SGS_model_ctl           gradient
      filtering_scheme_ctl    line
      difference_scheme_ctl   original
      diff_coef_mode_ctl      layerd
      negative_clip_ctl       save
      direction_marging_ctl   lsq
!
      begin SGS_files_control
        filter_elength_prefix   'filter_elen'
        filter_file_prefix      'filter_node'
!        wider_filter_prefix     'filter/filter_coef_2'
!
        model_coef_rst_prefix       'model_coefs_ini'
        commutel_coef_rst_prefix    'commute_coefs_ini'
      end
!
      istep_dynamic_ctl         1
      min_step_dynamic_ctl      1
      max_step_dynamic_ctl      50
      delta_to_shrink_ctl      1.0d-2
      delta_to_extend_ctl      1.0d-3
!
      array SGS_terms_ctl      5
        SGS_terms_ctl    heat              end
        SGS_terms_ctl    inertia           end
        SGS_terms_ctl    gravity           end
        SGS_terms_ctl    Lorentz           end
        SGS_terms_ctl    induction         end
      end array
!
      begin 3d_filtering_ctl
        array whole_filtering_grp_ctl  2
          whole_filtering_grp_ctl  Both   end
          whole_filtering_grp_ctl  whole  end
        end array
!
        array fluid_filtering_grp_ctl  2
            fluid_filtering_grp_ctl  Both   end
            fluid_filtering_grp_ctl  fluid  end
        end array
!
        momentum_filter_ctl      fluid_filtering
        heat_filter_ctl          fluid_filtering
        induction_filter_ctl     whole_filtering
      end
!
      begin dynamic_model_layer_ctl
!
        layering_data_ctl     ele_group_list
        num_layering_grp_ctl      8
        start_layering_grp_name_ctl  fluid_layer_1
        num_fl_layer_grp_ctl      8
        start_fl_layer_grp_name_ctl  fluid_layer_1
!
!       layering_data_ctl     explicit
!       array layer_grp_name_ctl    8
!         layer_grp_name_ctl    fluid_layer_1   end
!         layer_grp_name_ctl    fluid_layer_2   end
!         layer_grp_name_ctl    fluid_layer_3   end
!         layer_grp_name_ctl    fluid_layer_4   end
!         layer_grp_name_ctl    fluid_layer_5   end
!         layer_grp_name_ctl    fluid_layer_6   end
!         layer_grp_name_ctl    fluid_layer_7   end
!         layer_grp_name_ctl    fluid_layer_8   end
!       end array
!       array grp_stack_each_layer_ctl    4
!         grp_stack_each_layer_ctl  2
!         grp_stack_each_layer_ctl  4
!         grp_stack_each_layer_ctl  6
!         grp_stack_each_layer_ctl  8
!       end array
!
!        layering_data_ctl     start_end
    end
  end
!
!
!
  begin control
!!!!!  information for time integration
    begin time_step_ctl
      elapsed_time_ctl      42500.
      i_step_init_ctl       0
      i_step_number_ctl     2000
!
      i_step_check_ctl         40
      i_step_rst_ctl          800
      i_step_sectioning_ctl   400
      i_step_pvr_ctl          400
      i_step_ucd_ctl          800
      i_step_monitor_ctl       40
      i_step_sgs_coefs_ctl   2000
      i_step_boundary_ctl      40
!
      dt_ctl              5.0e-5
      time_init_ctl       0.0e-8
    end
!!!!!  number of points for time evolution
    begin intg_point_num_ctl
       intg_point_poisson_ctl   2
       intg_point_t_evo_ctl     2
    end
!!!!!  control for initial and restart data  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!      0: No initial values
!      1: Read restart data as initial values
!
!     -1: Initial values for dynamo benchmark Case 0
!     -2: Initial values for dynamo benchmark Case 1
!
!    -11: rotate around x-axis
!    -12: rotate around y-axis
!    -13: rotate around z-axis
!
!     20: Initial values for kinematic dynamo
!
!  <-100: Initial value for convection in rotating shell
!          int(num/100)... wave number in zonal direction
!  >1000: Initial value for MHD dynamo in rotating shell
!          int(num/100)... wave number of temperature in zonal direction
!          int(num/1000)... index j for spherical harmonics 
!                           by degree l and order m
!                                j = l*(l+1) + m
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    begin restart_file_ctl
       rst_ctl                -2
    end
!!!!!  parameter for solver 
    begin solver_ctl
      itr_ctl              1000
      eps_ctl              1.0E-4
      sigma_ctl               1.0
      sigma_diag_ctl          1.0
      method_ctl              CG
      precond_ctl             SSOR
    end
!!!!!!  setting for SMP parallel solver !!!!!!!!!!!!!!!!!!!!!
!
!    order_method:  method for ordering
!                  RCM_DJDS or MC_DJDS
!    min_color_ctl: minimum num. of color for multi color
!    mc_color_ctl:  color number for MC ordering
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
    begin DJDS_solver_ctl
      order_method     RCM_DJDS
      min_color_ctl    60
      mc_color_ctl     100
    end
!
!!!!!!   method for time evolution  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!   iflag_supg_ctl:      0...no SUPG 1...SUPG
!   num_multi_pass_ctl:  iteration counts for multi pass
!   maxiter_ctl:         maximum iteration number for correction
!   eps_4_velo_ctl:      ||div v||_{n} / ||div v||_{n-1}
!   eps_4_magne_ctl:     ||div B||_{n} / ||div B||_{n-1}
!   scheme_ctl:          Scheme for time evolution
!                 explicit_Euler...explicit_Euler
!                 2nd_Adams_Bashforth...2nd_Adams_Bashforth
!                 Crank_Nicolson...Crank_Nicolson with 2nd_Adams_Bashforth
!                 Crank_Nicolson_consist...Crank_Nicolson
!                                         with consistent mass matrix
!   method_4_velo_ctl:    method for Crank Nicolson Scheme
!   precond_4_crank_ctl:  preconditioning method for Crank Nicolson Scheme
!
!    spherical transfer mode:  'radius_in' 'radius_out' 'long_loop'
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
    begin time_loop_ctl
      iflag_supg_ctl           0
      num_multi_pass_ctl       1
      maxiter_ctl              1
      eps_4_velo_ctl           5.0e-1
      eps_4_magne_ctl          5.0e-1
      scheme_ctl              Crank_Nicolson
      diffuse_correct_ctl     On
      coef_imp_v_ctl          5.0e-1
      coef_imp_t_ctl          5.0e-1
      coef_imp_b_ctl          5.0e-1
      coef_imp_d_ctl          5.0e-1
      method_4_velo_ctl      CG 
      precond_4_crank_ctl     SSOR   
      modify_coriolis_4_crank_ctl  0
      sph_transform_mode_ctl   'radius_in'
    end
  end
!
!!!!!   control for monitor nodal data
  begin monitor_data_ctl
    array monitor_grp_ctl   1
      monitor_grp_ctl     mid_equator   end
    end array
  end
!
  begin visual_control
    array cross_section_ctl  4
      file  cross_section_ctl   ctl_psf_cmb
      file  cross_section_ctl   ctl_psf_z0 
      file  cross_section_ctl   ctl_psf_z0.3
      file  cross_section_ctl   ctl_psf_z1.0
    end array cross_section_ctl
    array isosurface_ctl     0
    array  volume_rendering  0
  end
!
end
