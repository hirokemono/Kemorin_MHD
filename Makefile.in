#
#  Makefile for Kemo's Dynamo toolkit
#    Written by H. Matsui
#
SHELL           = @SHELL@
#
#  directories of Kemo's Dynamo toolkit
#
SRCDIR = @abs_top_srcdir@
INSTDIR= @prefix@
#
MHDDIR =   $(SRCDIR)/MHD
MAKEDIR=   $(SRCDIR)/work
BUILDDIR=  $(SRCDIR)/bin
PYTHONDIR= $(MHDDIR)/pythons

MAKE64DIR= $(SRCDIR)/work_64
BUILD64DIR= $(SRCDIR)/bin_64
#
# MPI settings
#
MPICHDIR =    @MPIDIR@
MPICHLIBDIR = $(MPICHDIR)/lib
MPICHBINDIR = $(MPICHDIR)/bin
MPICHINCDIR = @MPIINCDIR@
MPILIBS =     @MPILIBS@
MPIRUN =      @MPIRUN@
#
#    compilers
#
F90 = @FC@
CC =  @CC@
CXX = @CXX@
AS =  @CCAS@

F90_LOCAL = $(F90)

MPIF90 = @MPIFC@
MPICC =  @MPICC@

GMAKE =  @GMAKE@
AR =     @ar_bin@
RANLIB = @RANLIB@

#
# OPENMP_FCFLAGS OprnMP option for fortran compiler
# COCOA_FLAG is defined to use cocoa Framework
# XL_FORTRAN   Set "-WF," option for cpp preprocessor
# SSE_FLAG     X86 instruction flag
#
OPENMP_FCFLAGS = @OPENMP_FCFLAGS@
OPENMP_CFLAGS =  @OPENMP_CFLAGS@
COCOA_FLAG =     @COCOA_FLAG@
XL_FORTRAN =     @XL_FORTRAN@

SSE_FLAG = @SSE_FLAG@
SSE_CPU =  @SSE_CPU@
SSE4 =     @SSE4@
SSE8 =     @SSE8@

#
#  optimization
#
F90OPTFLAGS= @FCFLAGS@
OPTFLAGS =   @CFLAGS@
CXXFLAGS =   @CXXFLAGS@
DEPFLAGS= -MM -w -DDEPENDENCY_CHECK
#
#   BLAS settings
#
BLAS_LIBS = @BLAS_LIBS@
#
#   libpng and zlib settings
#
PKGFLAGS_ZLIB = @PKGFLAGS_ZLIB@
ZLIB_CFLAGS =   @ZLIB_CFLAGS@
ZLIB_LIBS =     @ZLIB_LIBS@
PKGFLAGS_PNG =  @PKGFLAGS_PNG@
PNG_CFLAGS =    @PNG_CFLAGS@
PNG_LIBS =      @PNG_LIBS@
#
#    FFTW3 settings
#
PKGFLAGS_FFTW3=   @PKGFLAGS_FFTW3@
FFTW3_CFLAGS=     @FFTW3_CFLAGS@
FFTW3_LIBS=       @FFTW3_LIBS@
FFTW3_OMP_LIBS=   @FFTW3_OMP_LIBS@
#
#    HDF5 fortran wrapper settings
#
HDF5_FFLAGS=    @HDF5_FFLAGS@
HDF5_LDFLAGS=   @HDF5_LDFLAGS@
HDF5_FLIBS=     @HDF5_PFLIBS@
#
#   X window settings
#
X_CFLAGS = @X_CFLAGS@
X_LIBS= @X_LIBS@ -lm
#
#   OpenGL settings (Requirement: OpenGL, libpng)
#
PKGFLAGS_GL= @PKGFLAGS_GL@
OPENGL_INC = @GL_INC@
OPENGL_LIBS= @GL_LIBS@
#
#   PGPLOT settings (Requirement: pgplot, libpng)
#
PGPLOT_LIBS= @PGPLOT_LIBS@
#
#   GTK+ settings (Requirement: OpenGL, libpng)
PKGFLAGS_GTK= @PKGFLAGS_GTK@
GTK3_CFLAGS=  @GTK3_CFLAGS@
GTK3_LIBS=    @GTK3_LIBS@
#
#   GLFW settings (Requirement: OpenGL, libpng)
#
PKGFLAGS_GLFW= @PKGFLAGS_GLFW@
GLFW_CFLAGS=   @GLFW_CFLAGS@
GLFW_LIBS=     @GLFW_LIBS@
#
#
#   FFMPEG settings
PKGFLAGS_FFMPEG= "@PKGFLAGS_FFMPEG@"
FFMPEG_CFLAGS=    @FFMPEG_CFLAGS@
FFMPEG_LIBS=      @FFMPEG_LIBS@
#
#  --- Please do not chenge the following ---
#
64BIT_INT= 64BIT_INT
MAKE_MOD_DEP= $(BUILDDIR)/make_f90depends
#

all: makemake makemake64
	cd $(MAKEDIR); $(GMAKE)
	cd $(MAKE64DIR); $(GMAKE)

$(MAKE_MOD_DEP): $(MHDDIR)/module_dependency/make_module_dependency.f90
	mkdir -p $(MAKEDIR)
	mkdir -p $(BUILDDIR)
	$(F90_LOCAL) -c -o $(MAKEDIR)/make_module_dependency.o $<
	$(F90_LOCAL) -o $@ $(MAKEDIR)/make_module_dependency.o

depends: $(MAKE_MOD_DEP)
	@echo "# Construct dependencies"; \
	cd $(MHDDIR) ; \
		$(GMAKE) \
		GMAKE="$(GMAKE)" \
		SRCDIR="$(SRCDIR)" \
		INSTDIR="$(INSTDIR)" \
		MAKEDIR="$(MAKEDIR)" \
		BUILDDIR="$(BUILDDIR)" \
		PYTHONDIR="$(PYTHONDIR)" \
		MHDDIR="$(MHDDIR)" \
		BLAS_LIBS="$(BLAS_LIBS)" \
		ZLIB_CFLAGS="$(ZLIB_CFLAGS)" \
		ZLIB_LIBS="$(ZLIB_LIBS)"     \
		PNG_CFLAGS="$(PNG_CFLAGS)"   \
		PNG_LIBS="$(PNG_LIBS)"       \
		FFTW3_CFLAGS="$(FFTW3_CFLAGS)" \
		FFTW3_LIBS="$(FFTW3_LIBS)" \
		FFTW3_OMP_LIBS="$(FFTW3_OMP_LIBS)" \
		X_LIBS="$(X_LIBS)" \
		X_CFLAGS="$(X_CFLAGS)" \
		OPENGL_INC="$(OPENGL_INC)" \
		OPENGL_LIBS="$(OPENGL_LIBS)" \
		PGPLOT_LIBS="$(PGPLOT_LIBS)" \
		GTK3_CFLAGS="$(GTK3_CFLAGS)" \
		GTK3_LIBS="$(GTK3_LIBS)" \
		GLFW_CFLAGS="$(GLFW_CFLAGS)" \
		GLFW_LIBS="$(GLFW_LIBS)" \
		FFMPEG_CFLAGS="$(FFMPEG_CFLAGS)" \
		FFMPEG_LIBS="$(FFMPEG_LIBS)" \
		HDF5_FFLAGS="$(HDF5_FFLAGS)" \
		HDF5_LDFLAGS="$(HDF5_LDFLAGS)" \
		HDF5_FLIBS="$(HDF5_FLIBS)" \
		COCOA_FLAG="$(COCOA_FLAG)" \
		OPTFLAGS="$(OPTFLAGS)" \
		F90OPTFLAGS="$(F90OPTFLAGS)" \
		OPENMP_FCFLAGS="$(OPENMP_FCFLAGS)" \
		OPENMP_CFLAGS="$(OPENMP_CFLAGS)" \
		CXXFLAGS="$(CXXFLAGS)" \
		DEPFLAGS="$(DEPFLAGS)" \
		F90LIB="$(F90LIB)" \
		F90_LOCAL="$(F90_LOCAL)" \
		CC="$(CC)" \
		CXX="$(CXX)" \
		AS="$(AS)" \
		MPIF90="$(MPIF90)" \
		MPICC="$(MPICC)"   \
		MPIRUN="$(MPIRUN)" \
		MAKE_MOD_DEP="$(MAKE_MOD_DEP)" \
		SSE_FLAG="$(SSE_FLAG)" \
		SSE_CPU="$(SSE_CPU)" \
		SSE4="$(SSE4)" \
		SSE8="$(SSE8)" \
		depends

makemake: $(MAKE_MOD_DEP)
	@echo "# Construct Makefile"; \
	cd $(MHDDIR) ; \
		$(GMAKE) \
		GMAKE="$(GMAKE)" \
		SRCDIR="$(SRCDIR)" \
		INSTDIR="$(INSTDIR)" \
		MAKEDIR="$(MAKEDIR)" \
		BUILDDIR="$(BUILDDIR)" \
		PYTHONDIR="$(PYTHONDIR)" \
		MHDDIR="$(MHDDIR)" \
		MPICHDIR="$(MPICHDIR)" \
		MPICHLIBDIR="$(MPICHLIBDIR)" \
		MPILIBS="$(MPILIBS)" \
		MPICHBINDIR="$(MPICHBINDIR)" \
		MPICHINCDIR="$(MPICHINCDIR)" \
		BLAS_LIBS="$(BLAS_LIBS)" \
		ZLIB_CFLAGS="$(ZLIB_CFLAGS)" \
		ZLIB_LIBS="$(ZLIB_LIBS)"     \
		PNG_CFLAGS="$(PNG_CFLAGS)"   \
		PNG_LIBS="$(PNG_LIBS)"       \
		FFTW3_CFLAGS="$(FFTW3_CFLAGS)" \
		FFTW3_LIBS="$(FFTW3_LIBS)" \
		FFTW3_OMP_LIBS="$(FFTW3_OMP_LIBS)" \
		X_LIBS="$(X_LIBS)" \
		X_CFLAGS="$(X_CFLAGS)" \
		OPENGL_INC="$(OPENGL_INC)" \
		OPENGL_LIBS="$(OPENGL_LIBS)" \
		PGPLOT_LIBS="$(PGPLOT_LIBS)" \
		GTK3_CFLAGS="$(GTK3_CFLAGS)" \
		GTK3_LIBS="$(GTK3_LIBS)" \
		GLFW_CFLAGS="$(GLFW_CFLAGS)" \
		GLFW_LIBS="$(GLFW_LIBS)" \
		FFMPEG_CFLAGS="$(FFMPEG_CFLAGS)" \
		FFMPEG_LIBS="$(FFMPEG_LIBS)" \
		HDF5_FFLAGS="$(HDF5_FFLAGS)" \
		HDF5_LDFLAGS="$(HDF5_LDFLAGS)" \
		HDF5_FLIBS="$(HDF5_FLIBS)" \
		COCOA_FLAG="$(COCOA_FLAG)" \
		OPTFLAGS="$(OPTFLAGS)" \
		F90OPTFLAGS="$(F90OPTFLAGS)" \
		OPENMP_FCFLAGS="$(OPENMP_FCFLAGS)" \
		OPENMP_CFLAGS="$(OPENMP_CFLAGS)" \
		CXXFLAGS="$(CXXFLAGS)" \
		DEPFLAGS="$(DEPFLAGS)" \
		F90LIB="$(F90LIB)" \
		F90_LOCAL="$(F90_LOCAL)" \
		CC="$(CC)" \
		CXX="$(CXX)" \
		AS="$(AS)" \
		MPIF90="$(MPIF90)" \
		MPICC="$(MPICC)"   \
		MPIRUN="$(MPIRUN)" \
		AR="$(AR)" \
		RANLIB="$(RANLIB)" \
		XL_FORTRAN="$(XL_FORTRAN)" \
		SSE_FLAG="$(SSE_FLAG)" \
		SSE_CPU="$(SSE_CPU)" \
		SSE4="$(SSE4)" \
		SSE8="$(SSE8)" \
		makemake

makemake64: $(MAKE_MOD_DEP)
	@echo "# Construct Makefile for 64-bit integer"; \
	cd $(MHDDIR) ; \
		$(GMAKE) \
		GMAKE="$(GMAKE)" \
		SRCDIR="$(SRCDIR)" \
		INSTDIR="$(INSTDIR)" \
		MAKEDIR="$(MAKE64DIR)" \
		BUILDDIR="$(BUILD64DIR)" \
		PYTHONDIR="$(PYTHONDIR)" \
		MHDDIR="$(MHDDIR)" \
		MPICHDIR="$(MPICHDIR)" \
		MPICHLIBDIR="$(MPICHLIBDIR)" \
		MPILIBS="$(MPILIBS)" \
		MPICHBINDIR="$(MPICHBINDIR)" \
		MPICHINCDIR="$(MPICHINCDIR)" \
		BLAS_LIBS="$(BLAS_LIBS)" \
		ZLIB_CFLAGS="$(ZLIB_CFLAGS)" \
		ZLIB_LIBS="$(ZLIB_LIBS)"     \
		PNG_CFLAGS="$(PNG_CFLAGS)"   \
		PNG_LIBS="$(PNG_LIBS)"       \
		FFTW3_CFLAGS="$(FFTW3_CFLAGS)" \
		FFTW3_LIBS="$(FFTW3_LIBS)" \
		FFTW3_OMP_LIBS="$(FFTW3_OMP_LIBS)" \
		X_LIBS="$(X_LIBS)" \
		X_CFLAGS="$(X_CFLAGS)" \
		OPENGL_INC="$(OPENGL_INC)" \
		OPENGL_LIBS="$(OPENGL_LIBS)" \
		PGPLOT_LIBS="$(PGPLOT_LIBS)" \
		GTK3_CFLAGS="$(GTK3_CFLAGS)" \
		GTK3_LIBS="$(GTK3_LIBS)" \
		GLFW_CFLAGS="$(GLFW_CFLAGS)" \
		GLFW_LIBS="$(GLFW_LIBS)" \
		FFMPEG_CFLAGS="$(FFMPEG_CFLAGS)" \
		FFMPEG_LIBS="$(FFMPEG_LIBS)" \
		HDF5_FFLAGS="$(HDF5_FFLAGS)" \
		HDF5_LDFLAGS="$(HDF5_LDFLAGS)" \
		HDF5_FLIBS="$(HDF5_FLIBS)" \
		COCOA_FLAG="$(COCOA_FLAG)" \
		OPTFLAGS="$(OPTFLAGS)" \
		F90OPTFLAGS="$(F90OPTFLAGS)" \
		OPENMP_FCFLAGS="$(OPENMP_FCFLAGS)" \
		OPENMP_CFLAGS="$(OPENMP_CFLAGS)" \
		CXXFLAGS="$(CXXFLAGS)" \
		DEPFLAGS="$(DEPFLAGS)" \
		F90LIB="$(F90LIB)" \
		F90_LOCAL="$(F90_LOCAL)" \
		CC="$(CC)" \
		CXX="$(CXX)" \
		AS="$(AS)" \
		MPIF90="$(MPIF90)" \
		MPICC="$(MPICC)"   \
		MPIRUN="$(MPIRUN)" \
		AR="$(AR)" \
		RANLIB="$(RANLIB)" \
		XL_FORTRAN="$(XL_FORTRAN)" \
		SSE_FLAG="$(SSE_FLAG)" \
		SSE_CPU="$(SSE_CPU)" \
		SSE4="$(SSE4)" \
		SSE8="$(SSE8)" \
		64BIT_INT="$(64BIT_INT)" \
		makemake



install:
	cd $(MAKEDIR) ; \
		$(GMAKE) install
install64:
	cd $(MAKE64DIR) ; \
		make install

clean:
	for dir in $(MAKEDIR) $(MAKE64DIR) $(MHDDIR) ; do \
	echo "# cleaning $${dir} directory..."; \
		( cd $${dir}; \
		$(GMAKE) clean )\
	done; \
	rm -f mpif.h *.o *.mod *~ *.par *.diag *.a *.f90

distclean:
	echo "# Back to initial package"; \
	rm -fr $(MAKEDIR) $(MAKE64DIR) $(BUILDDIR) $(BUILD64DIR) Makefile config.log
